name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    #env:
      #NEO4J_IMPORT_DIR: 
      #SNAKEMAKE_LOGS: ${{ secrets.SNAKEMAKE_LOGS }}      
      #DATA_DIR: ${{ secrets.DATA_DIR }}
      #PROCESSING_DIR:
      #NEO4J_LOG_DIR: 
      #GRAPH_DIR: ${{ secrets.GRAPH_DIR }}
      #THREADS: ${{ secrets.THREADS }}
      #GRAPH_VERSION: ${{ secrets.GRAPH_VERSION }}
      #GRAPH_CONTAINER_NAME: ${{ secrets.GRAPH_CONTAINER_NAME }}
      #GRAPH_BOLT_PORT: ${{ secrets.GRAPH_BOLT_PORT }}
      #GRAPH_PASSWORD: ${{ secrets.GRAPH_PASSWORD }}
      #GRAPH_USER: ${{ secrets.GRAPH_USER }}
      #GRAPH_HOST: ${{ secrets.GRAPH_HOST }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        $CONDA/bin/conda env update --file environment.yml --name base
    - name: Lint with flake8
      run: |
        $CONDA/bin/conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Snakemake Lint 
    #  run: |
    #    $CONDA/bin/snakemake --lint
    - name: Snakemake dry run
      run: |
        $CONDA/bin/snakemake -n
    - name: Snakemake clean and build
      run: |
        $CONDA/bin/conda env update --file environment.yml --name base
        $CONDA/bin/python --version
        $CONDA/bin/snakemake -r clean_all -j 2
        $CONDA/bin/snakemake -r check_new_data -j 2
